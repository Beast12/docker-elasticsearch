version: '3.7'
services:
# Master Nodes
  esmaster01docker:
    image: elasticsearch:7.8.0
    hostname: esmaster01docker
    environment:
      - ELASTIC_PASSWORD=changeme
    deploy:
      mode: replicated
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      placement:
        constraints: [node.hostname == portainer01prod]
      resources:
        limits:
          cpus: '2'
          memory: 8G
        reservations:
          cpus: '2'
          memory: 8G
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 10s
    secrets:
      - source: elasticsearch-docker.crt
        target: /usr/share/elasticsearch/config/elasticsearch-docker.crt
        mode: 0444
        uid: "1000"
        gid: "1000"
      - source: elasticsearch-docker.key
        target: /usr/share/elasticsearch/config/elasticsearch-docker.key
        mode: 0444
        uid: "1000"
        gid: "1000"
      - source: elkstack-ca.crt
        target: /usr/share/elasticsearch/config/ca.crt
        mode: 0444
        uid: "1000"
        gid: "1000"
      - source: elasticsearch-config
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        mode: 0644
        uid: "1000"
        gid: "1000"
      - source: role-mapping-config
        target: /usr/share/elasticsearch/config/role_mapping.yml
        mode: 0644
        uid: "1000"
        gid: "1000"
      - source: elasticsearch-jvm-master
        target: /usr/share/elasticsearch/config/jvm.options
        mode: 0644
        uid: "1000"
        gid: "1000"
      - source: elasticsearch-instances
        target: /usr/share/elasticsearch/config/instances.yml
        mode: 0644
        uid: "1000"
        gid: "1000"
    volumes:
      - type: bind
        source: /etc/yum.repos.d/bac.repo
        target: /etc/yum.repos.d/CentOS-Base.repo
      - type: volume
        source: logs
        target: /var/log
      - type: volume
        source: esmaster-data1
        target: /usr/share/elasticsearch/data
      - type: volume
        source: snapshots
        target: /snapshots
    networks:
      - elastic
  esmaster02docker:
    image: elasticsearch:7.8.0
    hostname: esmaster02docker
    deploy:
      mode: replicated
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      placement:
        constraints: [node.hostname == portainer02prod]
      resources:
        limits:
          cpus: '2'
          memory: 8G
        reservations:
          cpus: '2'
          memory: 8G
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 10s
    secrets:
      - source: elasticsearch-docker.crt
        target: /usr/share/elasticsearch/config/elasticsearch-docker.crt
        mode: 0444
        uid: "1000"
        gid: "1000"
      - source: elasticsearch-docker.key
        target: /usr/share/elasticsearch/config/elasticsearch-docker.key
        mode: 0444
        uid: "1000"
        gid: "1000"
      - source: elkstack-ca.crt
        target: /usr/share/elasticsearch/config/ca.crt
        mode: 0444
        uid: "1000"
        gid: "1000"
      - source: elasticsearch-config
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        mode: 0644
        uid: "1000"
        gid: "1000"
      - source: role-mapping-config
        target: /usr/share/elasticsearch/config/role_mapping.yml
        mode: 0644
        uid: "1000"
        gid: "1000"
      - source: elasticsearch-jvm-master
        target: /usr/share/elasticsearch/config/jvm.options
        mode: 0644
        uid: "1000"
        gid: "1000"
    volumes:
      - type: volume
        source: logs
        target: /var/log
      - type: volume
        source: esmaster-data2
        target: /usr/share/elasticsearch/data
      - type: volume
        source: snapshots
        target: /snapshots
    networks:
      - elastic
  esmaster03docker:
    image: elasticsearch:7.8.0
    hostname: esmaster03docker
    deploy:
      mode: replicated
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      placement:
        constraints: [node.hostname == portainer03prod]
      resources:
        limits:
          cpus: '2'
          memory: 8G
        reservations:
          cpus: '2'
          memory: 8G
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 10s
    secrets:
      - source: elasticsearch-docker.crt
        target: /usr/share/elasticsearch/config/elasticsearch-docker.crt
        mode: 0444
        uid: "1000"
        gid: "1000"
      - source: elasticsearch-docker.key
        target: /usr/share/elasticsearch/config/elasticsearch-docker.key
        mode: 0444
        uid: "1000"
        gid: "1000"
      - source: elkstack-ca.crt
        target: /usr/share/elasticsearch/config/ca.crt
        mode: 0444
        uid: "1000"
        gid: "1000"
      - source: elasticsearch-config
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        mode: 0644
        uid: "1000"
        gid: "1000"
      - source: role-mapping-config
        target: /usr/share/elasticsearch/config/role_mapping.yml
        mode: 0644
        uid: "1000"
        gid: "1000"
      - source: elasticsearch-jvm-master
        target: /usr/share/elasticsearch/config/jvm.options
        mode: 0644
        uid: "1000"
        gid: "1000"
    volumes:
      - type: volume
        source: logs
        target: /var/log
      - type: volume
        source: esmaster-data3
        target: /usr/share/elasticsearch/data
      - type: volume
        source: snapshots
        target: /snapshots
    networks:
      - elastic
# Client Nodes
  esclient:
    image: elasticsearch:7.8.0
    hostname: esclient
    ports:
      - target: 9200
        protocol: tcp
        published: 9200
        mode: ingress
    deploy:
      mode: global
      update_config:
        parallelism: 1
        delay: 10s
      placement:
        constraints: [node.role == worker]
      resources:
        limits:
          cpus: '1'
          memory: 2G
        reservations:
          cpus: '1'
          memory: 2G
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 10s
    secrets:
      - source: elasticsearch-docker.crt
        target: /usr/share/elasticsearch/config/elasticsearch-docker.crt
        mode: 0444
        uid: "1000"
        gid: "1000"
      - source: elasticsearch-docker.key
        target: /usr/share/elasticsearch/config/elasticsearch-docker.key
        mode: 0444
        uid: "1000"
        gid: "1000"
      - source: elkstack-ca.crt
        target: /usr/share/elasticsearch/config/ca.crt
        mode: 0444
        uid: "1000"
        gid: "1000"
      - source: elasticsearch-client-config
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        mode: 0644
        uid: "1000"
        gid: "1000"
      - source: role-mapping-config
        target: /usr/share/elasticsearch/config/role_mapping.yml
        mode: 0644
        uid: "1000"
        gid: "1000"
      - source: elasticsearch-jvm-client
        target: /usr/share/elasticsearch/config/jvm.options
        mode: 0644
        uid: "1000"
        gid: "1000"
    volumes:
      - type: volume
        source: logs
        target: /var/log
    networks:
      - elastic
      - proxy
# Generic
volumes:
  esmaster-data1:
  esmaster-data2:
  esmaster-data3:
  logs:
  snapshots:
  kibana:

networks:
  elastic:
    external: true
  proxy:
    external: true

secrets:
  elasticsearch-docker.crt:
    file: certificates/elasticsearch-docker.crt
    name: elasticsearch-docker.crt-v${CONF_VERSION}
  elasticsearch-docker.key:
    file: certificates/elasticsearch-docker.key
    name: elasticsearch-docker.key-v${CONF_VERSION}
  elkstack-ca.crt:
    file: certificates/ca.crt
    name: ca.crt-v${CONF_VERSION}
  elasticsearch-config:
    file: configs/elasticsearch.yml
    name: elasticsearch-config-v${CONF_VERSION}
  elasticsearch-jvm-master:
    file: configs/jvm.options-master
    name: jvm.options-master-v${CONF_VERSION}
  elasticsearch-coordination-config:
    file: configs/elasticsearch-coordination.yml
    name: elasticsearch-coordination-config-v${CONF_VERSION}
  elasticsearch-jvm-coordination:
    file: configs/jvm.options-client
    name: jvm.options-client-v${CONF_VERSION}
  elasticsearch-client-config:
    file: configs/elasticsearch-client.yml
    name: elasticsearch-client-config-v${CONF_VERSION}
  elasticsearch-jvm-client:
    file: configs/jvm.options-client
    name: jvm.options-client-v${CONF_VERSION}
  role-mapping-config:
    file: configs/role_mapping.yml
    name: role_mapping.yml-v${CONF_VERSION}
  elasticsearch-instances:
    file: configs/instances.yml
    name: instances.yml-v${CONF_VERSION}
...
